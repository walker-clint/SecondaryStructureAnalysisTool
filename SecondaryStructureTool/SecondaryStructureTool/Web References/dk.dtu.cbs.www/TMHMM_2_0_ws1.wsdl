<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:tns="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" xmlns:common="http://www.cbs.dtu.dk/ws/ws-common" xmlns:tmhmm="http://www.cbs.dtu.dk/ws/ws-tmhmm" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1">
      <xsd:import schemaLocation="../common/ws_common_1_0b.xsd" namespace="http://www.cbs.dtu.dk/ws/ws-common" />
      <xsd:import schemaLocation="ws_tmhmm_2_0_ws1.xsd" namespace="http://www.cbs.dtu.dk/ws/ws-tmhmm" />
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1">
      <xsd:element name="runService" type="tmhmm:runService" />
      <xsd:element name="runServiceResponse" type="common:runServiceResponse" />
      <xsd:element name="fetchResult" type="common:fetchResult" />
      <xsd:element name="fetchResultResponse" type="tmhmm:fetchResultResponse" />
      <xsd:element name="pollQueue" type="common:pollQueue" />
      <xsd:element name="pollQueueResponse" type="common:pollQueueResponse" />
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="runServiceRequest">
    <wsdl:part name="parameters" element="tns:runService" />
  </wsdl:message>
  <wsdl:message name="runServiceResponse">
    <wsdl:part name="parameters" element="tns:runServiceResponse" />
  </wsdl:message>
  <wsdl:message name="fetchResultRequest">
    <wsdl:part name="parameters" element="tns:fetchResult" />
  </wsdl:message>
  <wsdl:message name="fetchResultResponse">
    <wsdl:part name="parameters" element="tns:fetchResultResponse" />
  </wsdl:message>
  <wsdl:message name="pollQueueRequest">
    <wsdl:part name="job" element="tns:pollQueue" />
  </wsdl:message>
  <wsdl:message name="pollQueueResponse">
    <wsdl:part name="queueentry" element="tns:pollQueueResponse" />
  </wsdl:message>
  <wsdl:portType name="WSTMHMM_2_0_ws1">
    <wsdl:operation name="runService">
      <wsdl:input name="runServiceRequest" message="tns:runServiceRequest" />
      <wsdl:output name="runServiceResponse" message="tns:runServiceResponse" />
    </wsdl:operation>
    <wsdl:operation name="pollQueue">
      <wsdl:input name="pollQueueRequest" message="tns:pollQueueRequest" />
      <wsdl:output name="pollQueueResponse" message="tns:pollQueueResponse" />
    </wsdl:operation>
    <wsdl:operation name="fetchResult">
      <wsdl:input name="fetchResultRequest" message="tns:fetchResultRequest" />
      <wsdl:output name="fetchResultResponse" message="tns:fetchResultResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WSTMHMM_2_0_ws1" type="tns:WSTMHMM_2_0_ws1">
    <soapenv:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="pollQueue">
      <soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1#pollQueue" />
      <wsdl:input>
        <soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" />
      </wsdl:input>
      <wsdl:output>
        <soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="runService">
      <soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1#runService" />
      <wsdl:input>
        <soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" />
      </wsdl:input>
      <wsdl:output>
        <soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchResult">
      <soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1#fetchResult" />
      <wsdl:input>
        <soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" />
      </wsdl:input>
      <wsdl:output>
        <soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSTMHMM_2_0_ws1" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WSTMHMM_2_0_ws1">
    <documentation>
		
		INTRODUCTION
      
    		TMHMM is a method for prediction transmembrane helices based on a hidden Markov model and 
		developed by Anders Krogh and Erik Sonnhammer. The method is described in detail in the 
		following articles:

		Predicting transmembrane protein topology with a hidden Markov model: Application 
		to complete genomes. A. Krogh, B. Larsson, G. von Heijne, and E. L. L. Sonnhammer. 
		J. Mol. Biol., 305(3):567-580, January 2001.
			PDF: http://www.binf.ku.dk/krogh/publications/pdf/KroghEtal01.pdf
			 
		A hidden Markov model for predicting transmembrane helices in protein sequences. 
		E. L.L. Sonnhammer, G. von Heijne, and A. Krogh.
		In J. Glasgow, T. Littlejohn, F. Major, R. Lathrop, D. Sankoff, and C. Sensen, editors, 
		Proceedings of the Sixth International Conference on Intelligent Systems for Molecular Biology, 
		pages 175-182, Menlo Park, CA, 1998. AAAI Press. 
			PDF: http://www.binf.ku.dk/krogh/publications/ps/SonnhammerEtal98.pdf
			
		Alongside this Web Service the TMHMM method is also implemented as
		a traditional click-and-paste WWW server at:
 		 http://www.cbs.dtu.dk/services/TMHMM/

		TMHMM is also available as a stand-alone software package to install
		and run at the user's site, with the same functionality. For academic
		users there is a download page at:
 		 http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?tmhmm

		Other users are requested to write to software@cbs.dtu.dk for details.

      
		WEB SERVICE OPERATION

		This Web Service is fully asynchronous; the usage is split into the
		following three operations:.
		
		1.runService    

		Input:	The following parameters and data:

 			*'sequencedata'		mulitple elements of type 'sequence':
              			*'sequence'	answers to one sequence:
                			*'id'         	unique identifier for the sequence;
                			*'comment'    	optional comment;
                			*'seq'        	protein sequences. The sequences must be written 
                  					using the one letter amino acid code: 
                        		            	`acdefghiklmnpqrstvwy' or `ACDEFGHIKLMNPQRSTVWY'. 
                        		           	Other letters will be converted to `X' and treated 
                           		         	as unknown amino acids. Other symbols, 
                             		        	such as whitespace and numbers, will be ignored. 
                               		      		All the input sequences are truncated to 70 aa from
                               				the N-terminal. Currently, at most 2.000 sequences 
                               		      		are allowed per submission.

		Output: Unique job identifier

    		2.pollQueue

   		Input:  Unique job identifier

    		Output: 'jobstatus' - the status of the job
               		 Possible values are QUEUED, ACTIVE, FINISHED, WAITING,
               		 REJECTED, UNKNOWN JOBID or QUEUE DOWN

    		3.fetchResult

    		Input :	Unique job identifier of a FINISHED job

		Output:		*'annsource'
		             		'method'   name of the method, here always TMHMM;
					'version'  version of the methods, here always 2.0 ws0;

					'ann'	   annotations - one element per input sequence;
					'sequence'	standard sequence object;
                 			    'id'        sequence identifier;                 
                                	    'annrecords/annrecord'
					   'feature    	feature name, here always 'TMHMM prediction';
                 				'range'       
						   'begin' start position of the sequence range;
                   				   'end'   end position of the sequence range;
                 				   'score'
						      'key'='no_score'	the predictor gives the most probable 
						      			location and orientation of transmembrane 
									helices in the sequence and doesn't produce 
									any numerical score;
                   					'value'    	the score value here is always 0.0 as the method 
									doesn't produce any score;
                              				'comment'	location of the sequence range 
			      						(inside, outside or TMhelix);
		CONTACT

		Questions concerning the scientific aspects of the TMHMM method should
		go to Anders Krogh, krogh@cbs.dtu.dk; technical questions concerning
		the Web Service should go to Karunakar Bayyapu, karun@cbs.dtu.dk or
		Kristoffer Rapacki, rapacki@cbs.dtu.dk.     
				
	   </documentation>
    <wsdl:port name="WSTMHMM_2_0_ws1" binding="tns:WSTMHMM_2_0_ws1">
      <soapenv:address location="http://wss.cbs.dtu.dk:80/cgi-bin/soap/ws/quasi.fcgi" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>